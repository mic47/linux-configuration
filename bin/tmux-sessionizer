#!/usr/bin/env bash

select_worktree_fzf() {
  sed -e 's/[ \t][ \6]*/:/g' \
    | cut -d/ -f 4- \
    | fzf \
      -d : \
      --ansi \
      --preview 'cd $HOME/{1}; git log -n 1 --color=always ; echo; git -c color.ui=always status' \
    | cut -d: -f 1
}
export -f select_worktree_fzf

select_worktree() {
  DIRECTORY_RELATIVE_TO_HOME=$(
    (
      # Put shortcuts here
      tmux list-sessions \
        | grep '/' \
        | sed -e 's|^\([^:]*\)-[0-9]*:.*\((created [^)]*)\).*$|\2,\1|' \
        | sort \
        | cut -d, -f 2  \
        | parallel 'echo -n $HOME/ ; echo {} | tr -d "\n" | tr "/" "\n" | tac | tr "\n" "/" ; echo' \
        | parallel 'pushd {} > /dev/null; echo {} [rr{#}] [$(git rev-parse --short HEAD)] [$(git branch --show-current)] ; popd > /dev/null'
      for directory in "$@" ; do
        pushd "$directory" > /dev/null 2> /dev/null || echo "$directory"
        git worktree list 2> /dev/null || echo "$directory"
        popd > /dev/null 2> /dev/null || continue
      done | sort -ur ;
    )| select_worktree_fzf
  )
  if [ -n "$DIRECTORY_RELATIVE_TO_HOME" ] ; then 
    (
      cd "$HOME/$DIRECTORY_RELATIVE_TO_HOME" || exit;
      SESSION_NAME=$(echo "$DIRECTORY_RELATIVE_TO_HOME" | tr '/' '\n' | tac | tr '\n' '/' )
      if [ -z "$TMUX" ] ; then
        tmux new-session -A -t "$SESSION_NAME"
      else
        tmux has-session -t "$SESSION_NAME" 2> /dev/null || tmux new -d -t "$SESSION_NAME"
        tmux switch -t "$SESSION_NAME"
      fi
    )
  fi 
}

select_worktree_git() {
  # shellcheck disable=SC2012,SC2086,SC2046
  select_worktree $(ls -d $HOME/Code/*/*/.git $HOME/config/linux-configuration/.git | sed -e 's/\/[.]git//')
}

select_worktree_git
